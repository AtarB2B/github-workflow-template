name: "Continuous Integration"

on:
  workflow_call:

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  REPO_NAME: ${{github.event.repository.name}}
  SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
  SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
  SSH_PRIV_KEY_LIBRARY: ${{secrets.SSH_PRIV_KEY_LIBRARY}}

  ATAR_PROJECT: ${{secrets.ATAR_PROJECT_ID_PROD}}
  ATAR_CREDENTIALS: ${{secrets.ATAR_CREDENTIALS_PROD}}
  ATAR_PROJECT_DEV: ${{secrets.ATAR_PROJECT_ID_DEV}}
  ATAR_CREDENTIALS_DEV: ${{secrets.ATAR_CREDENTIALS_DEV}}
  ATARB2B_API_CREDENTIALS_PROD: ${{secrets.ATARB2B_API_CREDENTIALS_PROD}}

  RETRY: "retry -l -i=60s -c=3"

jobs:
  create-feature-candidate:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/feature') }}
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Create feature candidate
        uses: AtarB2B/github-create-fc-workflow@main

  unit-test:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/feature') != true
    steps:
      # - name: Update Library
      #   uses: AtarB2B/github-library-workflow@main
      
      - name: Run Unit Tests
        uses: AtarB2B/github-unit-tests-workflow@new_python3
        with:
          TESTS_PATCH: "app/"
  
  sonar-scan:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/feature') != true
    needs: unit-test
    continue-on-error: true
    steps:
      - name: Run Sonar Scanner
        uses: AtarB2B/github-sonar-scan-workflow@main
        with:
          github-repo-name: ${{ github.event.repository.name }}
          GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{env.SONAR_TOKEN}}
  
  release-candidate:
    if: ${{ startsWith(github.ref, 'refs/heads/fc') }}
    needs: sonar-scan
    runs-on: ubuntu-latest
    steps:
      - name: Create Release Candidate
        id: create_rc
        uses: AtarB2B/github-create-rc-workflow@main
        with:
          ORIGIN: "fc"
          GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
  
  hotfix:
    if: ${{ startsWith(github.ref, 'refs/heads/hotfix') }}
    needs: sonar-scan
    runs-on: ubuntu-latest
    steps:
      - name: Create Release Candidate
        id: create_rc
        uses: AtarB2B/github-create-rc-workflow@main
        with:
          ORIGIN: "hotfix"
          GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
  
  hotfix-deploy:
    needs: hotfix
    runs-on: ubuntu-latest
    environment: qa
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Flow Deploy
        uses: AtarB2B/github-fc-deploy-workflow@minimal
        with:
          DEPLOY_ENV: "dev"
          SVC_NAME: ${{ github.event.repository.name }}
          SSH_PRIV_KEY_LIBRARY: ${{secrets.SSH_PRIV_KEY_LIBRARY}}

  feature-deploy:
    needs: release-candidate
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/fc') }}
    environment: qa
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Flow Deploy
        uses: AtarB2B/github-fc-deploy-workflow@minimal
        with:
          DEPLOY_ENV: "dev"
          SVC_NAME: ${{ github.event.repository.name }}
          SSH_PRIV_KEY_LIBRARY: ${{secrets.SSH_PRIV_KEY_LIBRARY}}
  
  rc-deploy:
    runs-on: ubuntu-latest
    environment: staging
    if: ${{ startsWith(github.ref, 'refs/heads/rc') }}
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Flow Deploy
        uses: AtarB2B/github-create-tag-workflow@minimal
        with:
          GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
          DEPLOY_ENV: "dev"
          CREATE_RELEASE: "false"
          SSH_PRIV_KEY_LIBRARY: ${{secrets.SSH_PRIV_KEY_LIBRARY}}
          PROMOTE: "--promote"
  
#  rc-prod-deploy:
#    runs-on: ubuntu-latest
#    environment: staging
#    if: ${{ startsWith(github.ref, 'refs/heads/rc') }}
#    container:
#      image: ghcr.io/atarb2b/deploy-devops:latest
#      credentials:
#        username: ${{github.repository_owner}}
#        password: ${{env.GITHUB_TOKEN}}
#    steps:
#      - name: Flow Deploy
#        uses: AtarB2B/github-create-tag-workflow@minimal
#        with:
#          GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
#          DEPLOY_ENV: "prod-atar"
#          CREATE_RELEASE: "false"
#          SSH_PRIV_KEY_LIBRARY: ${{secrets.SSH_PRIV_KEY_LIBRARY}}
#          PROMOTE: "--no-promote"
#
#  prod-deploy:
#    runs-on: ubuntu-latest
#    environment: production-atar
#    if: ${{ startsWith(github.ref, 'refs/heads/main') }}
#    container:
#      image: ghcr.io/atarb2b/deploy-devops:latest
#      credentials:
#        username: ${{github.repository_owner}}
#        password: ${{env.GITHUB_TOKEN}}
#    steps:
#      - name: Flow Deploy
#        uses: AtarB2B/github-create-tag-workflow@minimal
#        with:
#          GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
#          DEPLOY_ENV: "prod-atar"
#          CREATE_RELEASE: "true"
#          SSH_PRIV_KEY_LIBRARY: ${{secrets.SSH_PRIV_KEY_LIBRARY}}
#          PROMOTE: "--promote"
