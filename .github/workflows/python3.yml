name: "Continuous Integration"

on:
  workflow_call:

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  REPO_NAME: ${{github.event.repository.name}}
  SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
  SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
  SSH_PRIV_KEY_LIBRARY: ${{secrets.SSH_PRIV_KEY_LIBRARY}}

  ATAR_PROJECT: ${{secrets.ATAR_PROJECT_ID_PROD}}
  ATAR_CREDENTIALS: ${{secrets.ATAR_CREDENTIALS_PROD}}
  ATAR_PROJECT_DEV: ${{secrets.ATAR_PROJECT_ID_DEV}}
  ATAR_CREDENTIALS_DEV: ${{secrets.ATAR_CREDENTIALS_DEV}}
  RETRY: "retry -l -i=60s -c=3"

jobs:
  create-feature-candidate:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/feature') }}
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:

      - name: Create feature candidate
        uses: AtarB2B/github-create-fc-workflow@main

  unit-test:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      # - name: Update Library
      #   uses: AtarB2B/github-library-workflow@main
      #   with:
      #     SSH_PRIV_KEY_LIBRARY: ${{env.SSH_PRIV_KEY_LIBRARY}}

      - name: Update Library
        run: |
          echo "${{env.SSH_PRIV_KEY_LIBRARY}}" > ssh-rsa.key
          chmod 400 ssh-rsa.key
          mkdir /root/.ssh && touch /root/.ssh/known_hosts
          eval $(ssh-agent) && ssh-add ssh-rsa.key
          ssh-keyscan -H github.com >> /root/.ssh/known_hosts
          chmod +x ./update_library.sh && ./update_library.sh -s
          cat ./library/requirements.txt >> requirements.txt
        shell: bash

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip ; pip install flake8 pytest faker coverage pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f development/requirements.txt ]; then pip install -r development/requirements.txt; fi
          if [ -f library/requirements.txt ]; then pip install -r library/requirements.txt; fi
        shell: bash

      - name: Run Unit Tests
        uses: AtarB2B/github-unit-tests-workflow@main
        with:
          SSH_PRIV_KEY_LIBRARY: ${{env.SSH_PRIV_KEY_LIBRARY}}
  
  sonar-scan:
    runs-on: ubuntu-latest
    needs: unit-test
    continue-on-error: true
    steps:
      - name: Run Sonar Scanner
        uses: AtarB2B/github-sonar-scan-workflow@main
        with:
          github-repo-name: ${{ github.event.repository.name }}
  
  release-candidate:
    if: ${{ startsWith(github.ref, 'refs/heads/fc') }}
    needs: sonar-scan
    runs-on: ubuntu-latest
    steps:
      - name: Create Release Candidate
        uses: AtarB2B/github-create-rc-workflow@main
  
  feature-deploy:
    needs: release-candidate
    runs-on: ubuntu-latest
    environment: qa
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Update Library
        uses: AtarB2B/github-library-workflow@main
        with:
          SSH_PRIV_KEY_LIBRARY: ${{env.SSH_PRIV_KEY_LIBRARY}}

      - name: Flow Deploy
        uses: AtarB2B/github-fc-deploy-workflow@main
        with:
          DEPLOY_ENV: "dev"
          SVC_NAME: ${{ github.event.repository.name }}
  
  rc-deploy:
    runs-on: ubuntu-latest
    environment: homolog
    if: ${{ startsWith(github.ref, 'refs/heads/rc') }}
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Flow Deploy
        uses: AtarB2B/github-create-tag-workflow@main
        with:
          GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
          DEPLOY_ENV: "dev"
          SVC_NAME: ${{ github.event.repository.name }}
  
  prod-deploy:
    runs-on: ubuntu-latest
    environment: prod-atar
    if: ${{ startsWith(github.ref, 'refs/heads/main') }}
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Flow Deploy
        uses: AtarB2B/github-create-tag-workflow@main
        with:
          GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
          DEPLOY_ENV: "prod-atar"
          SVC_NAME: ${{ github.event.repository.name }}