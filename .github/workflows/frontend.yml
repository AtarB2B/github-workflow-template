name: "Continuous Integration"

on:
  workflow_call:

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  REPO_NAME: ${{github.event.repository.name}}
  SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
  SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}

  ATAR_PROJECT: ${{secrets.ATAR_ERP_PROJECT_ID}}
  ATAR_CREDENTIALS: ${{secrets.ATAR_ERP_CREDENTIALS}}
  ATAR_PROJECT_DEV: ${{secrets.ATAR_PROJECT_ID_DEV}}
  ATAR_CREDENTIALS_DEV: ${{secrets.ATAR_CREDENTIALS_DEV}}
  RETRY: "retry -l -i=60s -c=3"

jobs:
  create-feature-candidate:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/feature') }}
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Create feature candidate
        uses: AtarB2B/github-create-fc-workflow@main
  
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: Run Unit Tests
        uses: AtarB2B/github-unit-tests-workflow@frontend

  sonar-scan:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v3
      - name: Download code coverage results
        uses: actions/download-artifact@v3
      - name: "Move coverage file to correct folder"
        run: sed -i 's+/home/runner/work/${{ inputs.github-repo-name }}/${{ inputs.github-repo-name }}+/github/workspace+g' code-coverage-report/lcov.info
        shell: bash
      - uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{env.SONAR_TOKEN}}
      
      
      # - name: Run Sonar Scanner
      #   uses: AtarB2B/github-sonar-scan-workflow@frontend
      #   with:
      #     github-repo-name: ${{ github.event.repository.name }}
      #     GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
      #     SONAR_TOKEN: ${{env.SONAR_TOKEN}}
  
  release-candidate:
    if: ${{ startsWith(github.ref, 'refs/heads/fc') }}
    needs: sonar-scan
    runs-on: ubuntu-latest
    steps:
      - name: Create Release Candidate
        uses: AtarB2B/github-create-rc-workflow@main
  
  feature-deploy:
    needs: release-candidate
    runs-on: ubuntu-latest
    environment: qa
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Flow Deploy
        uses: AtarB2B/github-fc-deploy-workflow@frontend
        with:
          DEPLOY_ENV: "dev"
          SVC_NAME: ${{ github.event.repository.name }}
          SSH_PRIV_KEY_LIBRARY: ${{secrets.SSH_PRIV_KEY_LIBRARY}}
  
  rc-deploy:
    runs-on: ubuntu-latest
    environment: qa
    if: ${{ startsWith(github.ref, 'refs/heads/rc') }}
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Flow Deploy
        uses: AtarB2B/github-create-tag-workflow@frontend
        with:
          GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
          DEPLOY_ENV: "dev"
          SVC_NAME: ${{ github.event.repository.name }}
          CREATE_RELEASE: "true"
          SSH_PRIV_KEY_LIBRARY: ${{secrets.SSH_PRIV_KEY_LIBRARY}}
  
  prod-deploy:
    runs-on: ubuntu-latest
    environment: production-atar
    if: ${{ startsWith(github.ref, 'refs/heads/main') }}
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Flow Deploy
        uses: AtarB2B/github-create-tag-workflow@frontend
        with:
          GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
          DEPLOY_ENV: "prod-atar"
          SVC_NAME: ${{ github.event.repository.name }}
          CREATE_RELEASE: "false"
          SSH_PRIV_KEY_LIBRARY: ${{secrets.SSH_PRIV_KEY_LIBRARY}}