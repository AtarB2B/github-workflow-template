name: "Continuous Integration"

on:
  workflow_call:

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  REPO_NAME: ${{github.event.repository.name}}
  SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
  SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
  SSH_PRIV_KEY_LIBRARY: ${{secrets.SSH_PRIV_KEY_LIBRARY}}

  ATAR_PROJECT: ${{secrets.ATAR_PROJECT_ID_PROD}}
  ATAR_CREDENTIALS: ${{secrets.ATAR_CREDENTIALS_PROD}}
  ATAR_PROJECT_DEV: ${{secrets.ATAR_PROJECT_ID_DEV}}
  ATAR_CREDENTIALS_DEV: ${{secrets.ATAR_CREDENTIALS_DEV}}
  RETRY: "retry -l -i=60s -c=3"

jobs:
  create-feature-candidate:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/feature') }}
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Create feature candidate
        uses: AtarB2B/github-create-fc-workflow@main

  cron-deploy:
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/heads/feature') }}
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Trigger Scheduled Job
        uses: actions/github-script@v4
        with:
          token: ${{ env.GITHUB_TOKEN }}
          repository: AtarB2B/github-workflow-template
          script: |
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({ auth: process.env.GITHUB_TOKEN });
            octokit.actions.createWorkflowDispatch({
              owner: "AtarB2B",
              repo: "github-workflow-template",
              workflow_id: "55452555",
              ref: "main",
              inputs: {
                # any input parameters your scheduled job expects
              },
            });

  unit-test:
    runs-on: ubuntu-latest
    # continue-on-error: true
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run Unit Tests
        uses: AtarB2B/github-unit-tests-workflow@main
        with:
          SSH_PRIV_KEY_LIBRARY: ${{env.SSH_PRIV_KEY_LIBRARY}}
  
  sonar-scan:
    runs-on: ubuntu-latest
    needs: unit-test
    # continue-on-error: true
    steps:
      - name: Run Sonar Scanner
        uses: AtarB2B/github-sonar-scan-workflow@main
        with:
          github-repo-name: ${{ github.event.repository.name }}
          GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
          SONAR_TOKEN: ${{env.SONAR_TOKEN}}
  
  release-candidate:
    if: ${{ startsWith(github.ref, 'refs/heads/fc') }}
    needs: sonar-scan
    runs-on: ubuntu-latest
    steps:
      - name: Create Release Candidate
        uses: AtarB2B/github-create-rc-workflow@main
  
  feature-deploy:
    needs: release-candidate
    runs-on: ubuntu-latest
    environment: qa
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Flow Deploy
        uses: AtarB2B/github-fc-deploy-workflow@main
        with:
          DEPLOY_ENV: "dev"
          SVC_NAME: ${{ github.event.repository.name }}
          SSH_PRIV_KEY_LIBRARY: ${{secrets.SSH_PRIV_KEY_LIBRARY}}
  
  rc-deploy:
    runs-on: ubuntu-latest
    environment: homolog
    if: ${{ startsWith(github.ref, 'refs/heads/rc') }}
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Flow Deploy
        uses: AtarB2B/github-create-tag-workflow@main
        with:
          GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
          DEPLOY_ENV: "dev"
          SVC_NAME: ${{ github.event.repository.name }}
          CREATE_RELEASE: "true"
          SSH_PRIV_KEY_LIBRARY: ${{secrets.SSH_PRIV_KEY_LIBRARY}}
  
  prod-deploy:
    runs-on: ubuntu-latest
    environment: prod-atar
    if: ${{ startsWith(github.ref, 'refs/heads/main') }}
    container:
      image: ghcr.io/atarb2b/deploy-devops:latest
      credentials:
        username: ${{github.repository_owner}}
        password: ${{env.GITHUB_TOKEN}}
    steps:
      - name: Flow Deploy
        uses: AtarB2B/github-create-tag-workflow@main
        with:
          GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
          DEPLOY_ENV: "prod-atar"
          SVC_NAME: ${{ github.event.repository.name }}
          CREATE_RELEASE: "false"
          SSH_PRIV_KEY_LIBRARY: ${{secrets.SSH_PRIV_KEY_LIBRARY}}

  # prod-schedule-deploy:
  #   runs-on: ubuntu-latest
  #   environment: production-porto
  #   if: ${{ startsWith(github.ref, 'refs/heads/main') }}
  #   container:
  #     image: ghcr.io/atarb2b/deploy-devops:latest
  #     credentials:
  #       username: ${{github.repository_owner}}
  #       password: ${{env.GITHUB_TOKEN}}
  #   steps:
  #     - name: Flow Deploy
  #       uses: AtarB2B/github-create-tag-workflow@main
  #       with:
  #         GITHUB_TOKEN: ${{env.GITHUB_TOKEN}}
  #         DEPLOY_ENV: "prod-schedule"
  #         SVC_NAME: ${{ github.event.repository.name }}
  #         CREATE_RELEASE: "false"
  #         CLIENT: "porto"
  #     - name: Invoke Deploy Porto
  #       run: |
  #         gh workflow run 'Deploy PROD - Porto'
  #       shell: bash